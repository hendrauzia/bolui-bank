<?php
class Router
{
  /**
   * Flag for REST url generation, supported value false.
   *
   * @todo Add true to support REST url generation.
   */
  const REST = false;

  /**
   * Run current controller action.
   *
   * @throws RouteNotFound if provided route is not found.
   *
   * @return void
   */
  public static function dispatch()
  {
    // WARNING: Do not use extract($_GET), it will expose security vulnerabilities.
    $route = self::current_route();
    $controller_name = ucfirst($_GET['controller']) . "Controller";
    $action_name = strtolower($_GET['action']);

  	// WARNING: php forbid "new" as identifier, use neu (new in German) instead.
  	if ($action_name == "new") $action_name = "neu";

    // INFO: default to action index if no action name in param.
    if (empty($action_name)) $action_name = "index";

    // INFO: make sure provided controller and action exist.
    if (method_exists($controller_name, $action_name)) {
      $controller = new $controller_name();
      $controller->$action_name();        
    } else {
      throw new RouteNotFound($route);
    }
  }

  /**
   * Return current route generated by Router::route_of().
   *
   * @see Router::route_of for how route is generated.
   *
   * @return string
   */
  public static function current_route()
  {
    return self::route_of($_GET['controller'], $_GET['action']);
  }

  /**
   * Return path of provided route.
   * 
   * @param string $route Route in format 'controller#action'
   *
   * @return string
   *
   * @todo Generate REST path.
   */
  public static function path_of($route) {
    list($controller, $action) = explode('#', $route);

    $param = "controller=" . $controller;
    if ($action) $param .= "&action=" . $action;

    // TODO: Generate REST path
    if (!self::REST) return "index.php?" . $param;
  }

  /**
   * Triggered when invoking inaccessible method in a static context.
   *
   * This function mainly used to generate url routes with function ends with _path,
   * such as call to Router::new_sessions_path() will generate url to path of new sessions.
   *
   * Usage:
   * Router::new_sessions_path()
   * Router::index_accounts_path()
   * Router::accounts_path() is the same as Router::index_accounts_path()
   *
   * @param string $name Static method name in format action_controller_path.
   * @param mixed[] $arguments Static method arguments in array.
   *
   * @return string Generated path
   *
   * @todo Generate REST path
   */
  public static function __callStatic($name, $arguments)
  {
    list($suffix, $controller, $action) = array_reverse(explode('_', $name));

    // INFO: generate path if static method $name ends with _path
    if ($suffix == 'path') {
      // TODO: Generate REST path
      return self::path_of(self::route_of($controller, $action));
    }
  }

  /**
   * Generate route
   *
   * @param string $controller Controller name.
   * @param mixed $action Action name, optional.
   *
   * @return string Route name in string.
   */
  private static function route_of($controller, $action = null)
  {
    $route = $controller;
    if (!empty($action)) $route .= "#" . $action;

    return $route;
  }
}
